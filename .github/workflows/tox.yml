name: Python Testing Workflow

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - assigned
      - opened
      - synchronize
      - reopened

jobs:
  linting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions
    - name: Linting
      run: tox -e flake8-junit
    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Lint Test Results (Python ${{ matrix.python-version }})
        path: flake8_junit.xml

  bandit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions
    - name: Bandit
      run: tox -e bandit
    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Bandit Test Results (Python ${{ matrix.python-version }})
        path: bandit.xml

  safety:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']

    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions
    - name: Bandit
      run: tox -e safety

  coverage:
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run tests
      run: |
        docker-compose run tests --exit-code-from tests
    - name: Publish Coverage Report
      uses: 5monkeys/cobertura-action@master
      with:
        path: ./reports/cobertura.xml
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        minimum_coverage: 10
        skip_covered: false
        fail_below_threshold: false
        show_line: true
        show_branch: true
        show_class_names: true
        show_missing: true
        link_missing_lines: true
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Upload Cobertura Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Cobertura Test Results (Python ${{ matrix.python-version }})
        path: reports/cobertura.xml

  publish-test-results:
    permissions: write-all
    name: "Publish Unit Tests Results"
    needs: [bandit,linting]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: |
            Lint Test Results (Python ${{ matrix.python-version }})
            Bandit Test Results (Python ${{ matrix.python-version }})
            Cobertura Test Results (Python ${{ matrix.python-version }})
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: |
            **/*.xml
